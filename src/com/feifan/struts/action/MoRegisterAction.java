/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.feifan.struts.action;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.feifan.struts.bean.EntityForDownList;
import com.feifan.struts.common.CommonUtility;
import com.feifan.struts.dao.LogisticsDaoImpl;
import com.feifan.struts.dao.UserDaoBean;
import com.feifan.struts.form.ErrorInfo;
import com.feifan.struts.form.MoRegisterForm;

/**
 * MyEclipse Struts Creation date: 07-21-2013
 * 
 */
public class MoRegisterAction extends Action {

	private LogisticsDaoImpl logisticsDaoImpl;

	public LogisticsDaoImpl getLogisticsDaoImpl() {
		return logisticsDaoImpl;
	}

	public void setLogisticsDaoImpl(LogisticsDaoImpl logisticsDaoImpl) {
		this.logisticsDaoImpl = logisticsDaoImpl;
	}

	private static int WIDTH = 65;// 设置图片的宽度

	private static int HEIGHT = 22;// 设置图片的高度

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException {
		MoRegisterForm registerForm = (MoRegisterForm) form;// TODO
		// Auto-generated

		// 访问次数计数
		if (!"old".equals(request.getSession().getAttribute("countSession"))) {
			logisticsDaoImpl.updateParam("accessCount");
			String accessCount = logisticsDaoImpl.selectParam("accessCount");
			request.getSession().setAttribute("countSession", "old");
			request.getSession().setAttribute("accessCount", accessCount);
		}

		// 浏览器直接输入http://localhost:8080/register.do时
		if (registerForm.getFormEvent() == null) {
			System.out.println("***************null");
			request.getSession().removeAttribute("shengSession");
			request.getSession().removeAttribute("shiSession");
			return mapping.findForward("init");
		}

		else if (registerForm.getFormEvent().equals("TEST")) {

			String result = checkForm(registerForm);

			response.setCharacterEncoding("UTF-8");
			response.getWriter().println(result);
			return null;
		}
		// 画面初始INIT1
		else if (registerForm.getFormEvent().equals("INIT1")) {
			System.out.println("***************INIT1");
			// 取得所有省数据
			ArrayList<EntityForDownList> shengList = logisticsDaoImpl.querySheng();
			// 设定下拉框的省数据
			request.getSession().setAttribute("shengSession", shengList);

			StringBuffer selectOptions = new StringBuffer();
			selectOptions.append("<option value=\"" + "" + "\">" + "" + "请选择省份</option>\n");
			selectOptions.append(createOptions(shengList));
			response.setCharacterEncoding("UTF-8");
			response.getWriter().println(selectOptions);

			return null;
		}

		// 画面初始INIT2
		else if (registerForm.getFormEvent().equals("INIT2")) {
			System.out.println("***************INIT2");

			StringBuffer selectOptions = new StringBuffer();
			selectOptions.append("<option value=\"" + "" + "\">" + "" + "请选择城市</option>\n");
			response.setCharacterEncoding("UTF-8");
			response.getWriter().println(selectOptions);

			return null;
		}

		// 获取客服电话
		else if (registerForm.getFormEvent().equals("GETKEFUPHONE")) {
			System.out.println("***************GETKEFUPHONE");
			// 获取客服电话
			response.setCharacterEncoding("UTF-8");
			String data = "注册成功后2天内不和客服联系登录本网的用户，本网将不再保存用户数据。<br>望您尽快与客服人员联系。电话：" + logisticsDaoImpl.selectParam("kefuphone");

			if (request.getSession().getAttribute("accessCount") != null) {
				data = data + "****" + request.getSession().getAttribute("accessCount");
			}
			response.getWriter().print(data);

			return null;
		}

		// 省1数据改变时
		else if (registerForm.getFormEvent().equals("SHENG1CHANGE")) {
			System.out.println("***************SHENG1CHANGE");
			// 取得改变后省所对应市列表
			ArrayList<EntityForDownList> shiList = logisticsDaoImpl.queryShi(registerForm.getSheng1());
			// 设定市列表
			request.getSession().setAttribute("shiSession", shiList);
			StringBuffer selectOptions = new StringBuffer();
			selectOptions.append("<option value=\"" + "" + "\">" + "" + "请选择城市</option>\n");
			selectOptions.append(createOptions(shiList));
			response.setCharacterEncoding("UTF-8");
			response.getWriter().println(selectOptions);
			return null;
		}
		// 点击验证码图片时
		else if (registerForm.getFormEvent().equals("IMGCODECHANGE")) {
			System.out.println("***************IMGCODECHANGE");
			response.setContentType("image/jpeg");
			response.setHeader("Pragma", "No-cache");
			response.setHeader("Cache-Control", "no-cache");
			response.setDateHeader("Expires", 0);

			BufferedImage image = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);
			Graphics g = image.getGraphics();

			char[] rands = generateCheckCode();
			drawBackground(g);
			drawRands(g, rands);
			g.dispose();

			ByteArrayOutputStream bos = new ByteArrayOutputStream();
			ImageIO.write(image, "JPEG", bos);
			byte[] buf = bos.toByteArray();
			response.getOutputStream().write(buf);
			request.getSession().setAttribute("randomCode", new String(rands));
			System.out.println(rands);
			return null;
		}

		// 注册时
		else if (registerForm.getFormEvent().equals("REGISTER")) {
			ErrorInfo info = new ErrorInfo();
			try {

				info = getErrorInfo(registerForm);
				if (!isNoError(info)) {
					info.setResult("FAIL");
					response.setCharacterEncoding("UTF-8");
					response.getWriter().println(createJson(info));
					return null;
				}

				System.out.println("***************REGISTER");
				UserDaoBean userDaoBean = new UserDaoBean();
				userDaoBean.setCompanyname(registerForm.getCompanyname());
				userDaoBean.setUsername(registerForm.getUsername());
				userDaoBean.setPassword(registerForm.getPassword());
				userDaoBean.setRealname(registerForm.getRealname());
				userDaoBean.setShenfenid(registerForm.getShenfenid());
				userDaoBean.setShi_id(registerForm.getShi1());
				userDaoBean.setMobile(registerForm.getMobile());
				userDaoBean.setTelephone(registerForm.getTelephone());
				userDaoBean.setAddress(registerForm.getAddress());

				// 判断 用户名是否存在
				Long count = logisticsDaoImpl.selectUser(registerForm.getUsername());
				if (count != 0) {
					info.setResult("FAIL");
					info.setOtherInfo("该用户名已经被使用");
					response.setCharacterEncoding("UTF-8");
					response.getWriter().println(createJson(info));
					return null;
				}

				// 插入成功，返回自增ID，失败返回0
				Integer cnt = logisticsDaoImpl.insertUser(userDaoBean);
				if (cnt == null || cnt == 0) {
					info.setResult("FAIL");
					info.setOtherInfo("发生数据库异常,请重试");
					response.setCharacterEncoding("UTF-8");
					response.getWriter().println(createJson(info));
					return null;
				}

				response.setCharacterEncoding("UTF-8");
				info.setResult("SUCCESS");
				info.setUsername(registerForm.getUsername());
				response.setCharacterEncoding("UTF-8");
				response.getWriter().println(createJson(info));
				return null;

			} catch (RuntimeException e) {
				info.setResult("FAIL");
				info.setOtherInfo("发生未知异常,请重试或联系管理员");
				response.setCharacterEncoding("UTF-8");
				response.getWriter().println(createJson(info));
				return null;
			} catch (Exception e) {
				info.setResult("FAIL");
				info.setOtherInfo("发生未知异常,请重试或联系管理员");
				response.setCharacterEncoding("UTF-8");
				response.getWriter().println(createJson(info));
				return null;
			}
		}

		return null;
	}

	private StringBuffer createOptions(ArrayList<EntityForDownList> downList) {
		StringBuffer selectOptions = new StringBuffer();
		for (int i = 0; i < downList.size(); i++) {
			selectOptions.append("<option value=\"" + downList.get(i).getId() + "\">" + downList.get(i).getName() + "</option>\n");
		}
		return selectOptions;
	}

	private void drawBackground(Graphics g) {
		g.setColor(new Color(0xDCDCDC));
		g.fillRect(0, 0, WIDTH, HEIGHT);
		for (int i = 0; i < 120; i++) {
			int x = (int) (Math.random() * WIDTH);
			int y = (int) (Math.random() * HEIGHT);
			int red = (int) (Math.random() * 255);
			int green = (int) (Math.random() * 255);
			int blue = (int) (Math.random() * 255);
			g.setColor(new Color(red, green, blue));
			g.drawOval(x, y, 1, 0);
		}
	}

	private void drawRands(Graphics g, char[] rands) {
		// g.setColor(Color.BLUE);
		Random random = new Random();
		int red = random.nextInt(110);
		int green = random.nextInt(50);
		int blue = random.nextInt(50);
		g.setColor(new Color(red, green, blue));
		g.setFont(new Font(null, Font.ITALIC | Font.BOLD, 18));
		g.drawString("" + rands[0], 1, 17);
		g.drawString("" + rands[1], 16, 15);
		g.drawString("" + rands[2], 31, 18);
		g.drawString("" + rands[3], 46, 16);
	}

	private char[] generateCheckCode() {
		String chars = "23456789ABCDEFGHJKLMNPQRSTUVWXYZ";
		char[] rands = new char[4];
		for (int i = 0; i < 4; i++) {
			int rand = (int) (Math.random() * 32);
			rands[i] = chars.charAt(rand);
		}
		return rands;
	}

	private String checkForm(MoRegisterForm form) {

		// 单位名称
		if (form.getCurrentElement().equals("companyname")) {
			if (form.getCompanyname().trim().equals("")) {
				return "单位名称不能为空";
			} else if (!CommonUtility.isLengthOK(form.getCompanyname(), 2, 12)) {
				return "请输入2到12位";
			} else if (!CommonUtility.isChineseChar(form.getCompanyname())) {
				return "单位名称只能使用汉字";
			}
		}
		// 用户名
		if (form.getCurrentElement().equals("username")) {
			if (form.getUsername().trim().equals("")) {
				return "用户名不能为空";
			} else if (!CommonUtility.isLengthOK(form.getUsername(), 2, 8)) {
				return "请输入2到8位";
			} else if (!CommonUtility.isUsername(form.getUsername())) {
				return "用户名只能使用字母，数字，下划线，汉字";
			}
		}

		// 密码
		if (form.getCurrentElement().equals("password")) {
			if (form.getPassword().trim().equals("")) {
				return "密码不能为空";
			} else if (!CommonUtility.isLengthOK(form.getPassword(), 6, 8)) {
				return "请输入6到8位";
			}
		}
		// 密码确认
		if (form.getCurrentElement().equals("passwordConfirm")) {
			if (!form.getPassword().equals(form.getPasswordConfirm())) {
				return "确认密码与密码不一致";
			}
		}
		// 真实姓名
		if (form.getCurrentElement().equals("realname")) {
			if (form.getRealname().trim().equals("")) {
				return "真实姓名不能为空";
			} else if (!CommonUtility.isLengthOK(form.getRealname(), 2, 4)) {
				return "请输入2到4位";
			} else if (!CommonUtility.isChineseChar(form.getRealname())) {
				return "真实姓名只能使用汉字";
			}
		}
		// 身份证号
		if (form.getCurrentElement().equals("shenfenid")) {
			if (form.getShenfenid().trim().equals("")) {
				return "身份证号不能为空";
			} else if (!CommonUtility.isLengthOK(form.getShenfenid(), 18, 18)) {
				return "请输入18位";
			} else if (!CommonUtility.isPerson_Num(form.getShenfenid())) {
				return "身份证号格式有误";
			}
		}
		// 省
		if (form.getCurrentElement().equals("sheng1")) {
			if (form.getSheng1().trim().equals("")) {
				return "省份不能为空";
			}
		}

		// 市
		if (form.getCurrentElement().equals("shi1")) {
			if (form.getShi1().trim().equals("")) {
				return "城市不能为空";
			}
		}
		// 地址信息
		if (form.getCurrentElement().equals("address")) {
			if (form.getAddress().trim().equals("")) {
				return "地址信息不能为空";
			}
		}
		// 手机
		if (form.getCurrentElement().equals("mobile")) {
			if (form.getMobile().trim().equals("")) {
				return "手机不能为空";
			} else if (!CommonUtility.isLengthOK(form.getMobile(), 11, 11)) {
				return "请输入11位";
			} else if (!CommonUtility.isMobile(form.getMobile())) {
				return "手机格式有误";
			}
		}
		// 固定电话
		if (form.getCurrentElement().equals("telephone")) {
			if (form.getTelephone().trim().equals("")) {
				return "固定电话不能为空";
			} else if (!CommonUtility.isLengthOK(form.getTelephone(), 11, 12)) {
				return "请输入11到12位";
			} else if (!CommonUtility.isTelephone(form.getTelephone())) {
				return "固定电话格式有误";
			}
		}
		return "";
	}

	private ErrorInfo getErrorInfo(MoRegisterForm form) {

		ErrorInfo info = new ErrorInfo();
		// 单位名称
		if (form.getCompanyname().trim().equals("")) {
			info.setCompanyname("单位名称不能为空");
		} else if (!CommonUtility.isLengthOK(form.getCompanyname(), 2, 12)) {
			info.setCompanyname("请输入2到12位");
		} else if (!CommonUtility.isChineseChar(form.getCompanyname())) {
			info.setCompanyname("单位名称只能使用汉字");
		} else {
			info.setCompanyname("");
		}
		// 用户名
		if (form.getUsername().trim().equals("")) {
			info.setUsername("用户名不能为空");
		} else if (!CommonUtility.isLengthOK(form.getUsername(), 2, 8)) {
			info.setUsername("请输入2到8位");
		} else if (!CommonUtility.isUsername(form.getUsername())) {
			info.setUsername("用户名只能使用字母，数字，下划线，汉字");
		} else {
			info.setUsername("");
		}

		// 密码
		if (form.getPassword().trim().equals("")) {
			info.setPassword("密码不能为空");
		} else if (!CommonUtility.isLengthOK(form.getPassword(), 6, 8)) {
			info.setPassword("请输入6到8位");
		} else {
			info.setPassword("");
		}
		// 密码确认
		if (!form.getPassword().equals(form.getPasswordConfirm())) {
			info.setPasswordConfirm("确认密码与密码不一致");
		} else {
			info.setPasswordConfirm("");
		}
		// 真实姓名
		if (form.getRealname().trim().equals("")) {
			info.setRealname("真实姓名不能为空");
		} else if (!CommonUtility.isLengthOK(form.getRealname(), 2, 4)) {
			info.setRealname("请输入2到4位");
		} else if (!CommonUtility.isChineseChar(form.getRealname())) {
			info.setRealname("真实姓名只能使用汉字");
		} else {
			info.setRealname("");
		}
		// 身份证号
		if (form.getShenfenid().trim().equals("")) {
			info.setShenfenid("身份证号不能为空");
		} else if (!CommonUtility.isLengthOK(form.getShenfenid(), 18, 18)) {
			info.setShenfenid("请输入18位");
		} else if (!CommonUtility.isPerson_Num(form.getShenfenid())) {
			info.setShenfenid("身份证号格式有误");
		} else {
			info.setShenfenid("");
		}
		// 省
		if (form.getSheng1().trim().equals("")) {
			info.setSheng1("省份不能为空");
		} else {
			info.setSheng1("");
		}

		// 市
		if (form.getShi1().trim().equals("")) {
			info.setShi1("城市不能为空");
		} else {
			info.setShi1("");
		}
		// 地址信息
		if (form.getAddress().trim().equals("")) {
			info.setAddress("地址信息不能为空");
		} else {
			info.setAddress("");
		}
		// 手机
		if (form.getMobile().trim().equals("")) {
			info.setMobile("手机不能为空");
		} else if (!CommonUtility.isLengthOK(form.getMobile(), 11, 11)) {
			info.setMobile("请输入11位");
		} else if (!CommonUtility.isMobile(form.getMobile())) {
			info.setMobile("手机格式有误");
		} else {
			info.setMobile("");
		}
		// 固定电话
		if (form.getTelephone().trim().equals("")) {
			info.setTelephone("固定电话不能为空");
		} else if (!CommonUtility.isLengthOK(form.getTelephone(), 11, 12)) {
			info.setTelephone("请输入11到12位");
		} else if (!CommonUtility.isTelephone(form.getTelephone())) {
			info.setTelephone("固定电话格式有误");
		} else {
			info.setTelephone("");
		}

		// 其他信息
		info.setOtherInfo("");

		return info;
	}

	private boolean isNoError(ErrorInfo info) {
		if (!info.getCompanyname().equals("")) {
			return false;
		}
		if (!info.getUsername().equals("")) {
			return false;

		}
		if (!info.getAddress().equals("")) {
			return false;

		}
		if (!info.getRealname().equals("")) {
			return false;

		}
		if (!info.getShenfenid().equals("")) {
			return false;

		}
		if (!info.getSheng1().equals("")) {
			return false;

		}
		if (!info.getShi1().equals("")) {
			return false;

		}
		if (!info.getPassword().equals("")) {

			return false;
		}
		if (!info.getPasswordConfirm().equals("")) {

			return false;
		}
		if (!info.getTelephone().equals("")) {
			return false;

		}
		if (!info.getMobile().equals("")) {

			return false;
		}
		if (!info.getOtherInfo().equals("")) {

			return false;
		}
		return true;
	}

	private StringBuffer createJson(ErrorInfo info) {
		StringBuffer results = new StringBuffer();
		results.append("{");
		results.append("\"result\":" + "\"" + info.getResult() + "\",");
		results.append("\"companyname\":" + "\"" + info.getCompanyname() + "\",");
		results.append("\"username\":" + "\"" + info.getUsername() + "\",");
		results.append("\"address\":" + "\"" + info.getAddress() + "\",");
		results.append("\"realname\":" + "\"" + info.getRealname() + "\",");
		results.append("\"shenfenid\":" + "\"" + info.getShenfenid() + "\",");
		results.append("\"sheng1\":" + "\"" + info.getSheng1() + "\",");
		results.append("\"shi1\":" + "\"" + info.getShi1() + "\",");
		results.append("\"password\":" + "\"" + info.getPassword() + "\",");
		results.append("\"passwordConfirm\":" + "\"" + info.getPasswordConfirm() + "\",");
		results.append("\"telephone\":" + "\"" + info.getTelephone() + "\",");
		results.append("\"mobile\":" + "\"" + info.getMobile() + "\",");
		results.append("\"otherInfo\":" + "\"" + info.getOtherInfo() + "\"");
		results.append("}");
		return results;
	}
}