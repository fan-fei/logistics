/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.feifan.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.feifan.struts.bean.EntityForDownList;
import com.feifan.struts.bean.EntityForResultList;
import com.feifan.struts.common.CommonUtility;
import com.feifan.struts.dao.LogisticsDaoImpl;
import com.feifan.struts.dao.SearchConditionDaoBean;
import com.feifan.struts.form.MainForm;

/**
 * MyEclipse Struts Creation date: 06-24-2013
 * 
 */
public class MainAction extends Action {

	private LogisticsDaoImpl logisticsDaoImpl;

	public LogisticsDaoImpl getLogisticsDaoImpl() {
		return logisticsDaoImpl;
	}

	public void setLogisticsDaoImpl(LogisticsDaoImpl logisticsDaoImpl) {
		this.logisticsDaoImpl = logisticsDaoImpl;
	}

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {

		MainForm mainForm = (MainForm) form;

		// 访问次数计数
		if (!"old".equals(request.getSession().getAttribute("countSession"))) {
			logisticsDaoImpl.updateParam("accessCount");
			String accessCount = logisticsDaoImpl.selectParam("accessCount");
			request.getSession().setAttribute("countSession", "old");
			request.getSession().setAttribute("accessCount", accessCount);
		}

		if (mainForm.getFormEvent() == null) {
			return mapping.findForward("main");
		}

		// 画面初始打开时
		if (mainForm.getFormEvent().equals("SHENGLOAD")) {
			// 广告信息
			mainForm.getTopBean().setInfoList(logisticsDaoImpl.queryMarquee());
			// 取得所有省数据
			ArrayList<EntityForDownList> shengList = logisticsDaoImpl.querySheng();
			// 取得市数据
			ArrayList<EntityForDownList> shiList = logisticsDaoImpl.queryShi(shengList.get(0).getId());
			// 设定三组下拉框的省数据，市数据
			mainForm.getRightBean().setShengList1(shengList);
			mainForm.getRightBean().setShengList2(shengList);
			mainForm.getRightBean().setShengList3(shengList);
			mainForm.getRightBean().setShiList1(shiList);
			mainForm.getRightBean().setShiList2(shiList);
			mainForm.getRightBean().setShiList3(shiList);
			// LeftBottom信息
			mainForm.getLeftBottomBean().setRefreshSeconds(logisticsDaoImpl.selectParam("refreshMilliSecs"));
			mainForm.setOpenCloseFlag("close");
			mainForm.setConditionResultFlag("condition");
			queryLeft(mainForm);

		}

		// 省1数据改变时
		else if (mainForm.getFormEvent().equals("SHENG1CHANGE")) {
			ArrayList<EntityForDownList> shiList = logisticsDaoImpl.queryShi(mainForm.getRightBean().getSheng1());
			mainForm.getRightBean().setShiList1(shiList);
			mainForm.getRightBean().setShi1("");
			// LeftTop信息、LeftBottom信息
			queryLeft(mainForm);
		}

		// 省2数据改变时
		else if (mainForm.getFormEvent().equals("SHENG2CHANGE")) {
			ArrayList<EntityForDownList> shiList = logisticsDaoImpl.queryShi(mainForm.getRightBean().getSheng2());
			mainForm.getRightBean().setShiList2(shiList);
			mainForm.getRightBean().setShi2("");
			// LeftTop信息、LeftBottom信息
			queryLeft(mainForm);
		}
		// 省3数据改变时
		else if (mainForm.getFormEvent().equals("SHENG3CHANGE")) {
			ArrayList<EntityForDownList> shiList = logisticsDaoImpl.queryShi(mainForm.getRightBean().getSheng3());
			mainForm.getRightBean().setShiList3(shiList);
			mainForm.getRightBean().setShi3("");
			// LeftTop信息、LeftBottom信息
			queryLeft(mainForm);
		}

		// 市1数据改变时
		else if (mainForm.getFormEvent().equals("SHI1CHANGE")) {
			// LeftTop信息、LeftBottom信息
			queryLeft(mainForm);
		}

		// 市2数据改变时
		else if (mainForm.getFormEvent().equals("SHI2CHANGE")) {
			// LeftTop信息、LeftBottom信息
			queryLeft(mainForm);
		}

		// 市3数据改变时
		else if (mainForm.getFormEvent().equals("SHI3CHANGE")) {
			// LeftTop信息、LeftBottom信息
			queryLeft(mainForm);
		}

		// 打开搜索链接按下时
		else if (mainForm.getFormEvent().equals("OPENSEARCH")) {
			// 取得所有省数据
			ArrayList<EntityForDownList> shengList = logisticsDaoImpl.querySheng();
			mainForm.getLeftBottomBean().setShengList(shengList);
			mainForm.setOpenCloseFlag("open");
		}

		// 关闭搜索链接按下时
		else if (mainForm.getFormEvent().equals("CLOSESEARCH")) {
			mainForm.setOpenCloseFlag("close");
		}
		// 返回搜索链接按下时
		else if (mainForm.getFormEvent().equals("RETURNSEARCH")) {
			mainForm.setConditionResultFlag("condition");
		}
		// 省按下时
		else if (mainForm.getFormEvent().equals("SHENGCLICK")) {
			// 取得市数据
			ArrayList<EntityForDownList> shiList = logisticsDaoImpl.queryShi(mainForm.getLeftBottomBean().getSheng());
			mainForm.getLeftBottomBean().setShiList(shiList);
			// 县LIST清空
			mainForm.getLeftBottomBean().setShi("");
			mainForm.getLeftBottomBean().getXianList().clear();
		}
		// 市按下时
		else if (mainForm.getFormEvent().equals("SHICLICK")) {
			// 取得县数据
			ArrayList<EntityForDownList> xianList = logisticsDaoImpl.queryXian(mainForm.getLeftBottomBean().getShi());
			mainForm.getLeftBottomBean().setXian("");
			mainForm.getLeftBottomBean().setXianList(xianList);
		}
		// 双击省时
		else if (mainForm.getFormEvent().equals("SHENGDBLCLICK")) {
			// 取得市数据
			ArrayList<EntityForDownList> shiList = logisticsDaoImpl.queryShi(mainForm.getLeftBottomBean().getSheng());
			mainForm.getLeftBottomBean().setShiList(shiList);
			// 县LIST清空
			mainForm.getLeftBottomBean().setShi("");
			mainForm.getLeftBottomBean().getXianList().clear();

			doAddSheng(mainForm);
		}
		// 双击市 时
		else if (mainForm.getFormEvent().equals("SHIDBLCLICK")) {
			// 取得县数据
			ArrayList<EntityForDownList> xianList = logisticsDaoImpl.queryXian(mainForm.getLeftBottomBean().getShi());
			mainForm.getLeftBottomBean().setXian("");
			mainForm.getLeftBottomBean().setXianList(xianList);
			doAddShi(mainForm);
		}
		// 双击县 时
		else if (mainForm.getFormEvent().equals("XIANDBLCLICK")) {
			doAddXian(mainForm);
		}
		// 双击搜索关键字 时
		else if (mainForm.getFormEvent().equals("KEYSTRINGDBLCLICK")) {
			doDelKeyString(mainForm);
		}
		// 添加市按下时
		else if (mainForm.getFormEvent().equals("ADDSHI")) {
			doAddShi(mainForm);
		}
		// 添加县按下时
		else if (mainForm.getFormEvent().equals("ADDXIAN")) {
			doAddXian(mainForm);
		}
		// 所有市按下时
		else if (mainForm.getFormEvent().equals("ALLSHI")) {
			doAllShi(mainForm);
		}
		// 所有县按下时
		else if (mainForm.getFormEvent().equals("ALLXIAN")) {
			doAllXian(mainForm);
		}
		// 清空按下时
		else if (mainForm.getFormEvent().equals("CLEAR")) {
			mainForm.getLeftBottomBean().getKeyStringList().clear();
			mainForm.getLeftBottomBean().setKeyListEmptyFlag("EMPTY");
		}
		// 添加按下时
		else if (mainForm.getFormEvent().equals("ADDSEARCHSTRING")) {
			doAddSearchString(mainForm);
		}
		// 搜索按钮按下时
		else if (mainForm.getFormEvent().equals("QUERY")) {
			// LeftTop信息、LeftBottom信息
			queryLeft(mainForm);

			mainForm.setConditionResultFlag("result");
		}
		// 自动提交时
		else if (mainForm.getFormEvent().equals("AUTOSUBMIT")) {
			// 广告信息
			mainForm.getTopBean().setInfoList(logisticsDaoImpl.queryMarquee());
			// LeftTop信息、LeftBottom信息
			queryLeft(mainForm);

			mainForm.getLeftBottomBean().setRefreshSeconds(logisticsDaoImpl.selectParam("refreshMilliSecs"));
		}
		return mapping.findForward("main");
	}

	private String merge(MainForm mainForm) {
		String str = "";
		if (!CommonUtility.isEmpty(mainForm.getRightBean().getShi1())) {
			str = str + mainForm.getRightBean().getShi1() + ",";
		}
		if (!CommonUtility.isEmpty(mainForm.getRightBean().getShi2())) {
			str = str + mainForm.getRightBean().getShi2() + ",";
		}
		if (!CommonUtility.isEmpty(mainForm.getRightBean().getShi3())) {
			str = str + mainForm.getRightBean().getShi3();
		}
		return str.replaceAll(",*$", "");

	}

	private void queryLeft(MainForm mainForm) {
		String ids = merge(mainForm);
		if (!CommonUtility.isEmpty(ids)) {
			// 认定左上数据，选择城市
			mainForm.getLeftTopBean().setResult(logisticsDaoImpl.queryResult(ids));
			SearchConditionDaoBean condition = new SearchConditionDaoBean();
			condition.setIds(ids);
			condition.setKeyStrings(mainForm.getLeftBottomBean().getKeyStringList());
			// 认定左下数据,选择城市
			mainForm.getLeftBottomBean().setResult(logisticsDaoImpl.queryCoditionResult(condition));
			sortLeft(mainForm);

		} else {
			// 认定左上数据
			mainForm.getLeftTopBean().setResult(logisticsDaoImpl.queryAllResult());
			// 认定左下数据
			SearchConditionDaoBean condition = new SearchConditionDaoBean();
			condition.setKeyStrings(mainForm.getLeftBottomBean().getKeyStringList());
			mainForm.getLeftBottomBean().setResult(logisticsDaoImpl.queryCoditionAllResult(condition));
			sortLeft(mainForm);
		}
	}

	// 将关键变为红色
	private void sortLeft(MainForm mainForm) {
		for (EntityForResultList a : mainForm.getLeftBottomBean().getResult()) {
			for (EntityForDownList b : mainForm.getLeftBottomBean().getKeyStringList()) {
				a.setInfo(a.getInfo().replaceAll(b.getName(), "<font color=\"red\">" + b.getName() + "</font>"));
			}
		}
	}

	private void doAddSheng(MainForm mainForm) {
		String id = mainForm.getLeftBottomBean().getSheng();
		String name = "";

		// 省ID对应市NAME取得
		for (int i = 0; i < mainForm.getLeftBottomBean().getShengList().size(); i++) {
			if (mainForm.getLeftBottomBean().getShengList().get(i).getId().equals(id)) {
				name = mainForm.getLeftBottomBean().getShengList().get(i).getName();
				break;
			}
		}

		// 判断省NAME是否在搜索LIST中已经存在
		for (int i = 0; i < mainForm.getLeftBottomBean().getKeyStringList().size(); i++) {
			if (mainForm.getLeftBottomBean().getKeyStringList().get(i).getName().equals(name)) {
				return;
			}
		}

		// 不存在时添加
		mainForm.getLeftBottomBean().getKeyStringList().add(new EntityForDownList(name, name));
		mainForm.getLeftBottomBean().setKeyListEmptyFlag("NOTEMPTY");
	}

	private void doAddShi(MainForm mainForm) {
		String id = mainForm.getLeftBottomBean().getShi();
		String name = "";

		// 市ID对应市NAME取得
		for (int i = 0; i < mainForm.getLeftBottomBean().getShiList().size(); i++) {
			if (mainForm.getLeftBottomBean().getShiList().get(i).getId().equals(id)) {
				name = mainForm.getLeftBottomBean().getShiList().get(i).getName();
				break;
			}
		}

		// 判断市NAME是否在搜索LIST中已经存在
		for (int i = 0; i < mainForm.getLeftBottomBean().getKeyStringList().size(); i++) {
			if (mainForm.getLeftBottomBean().getKeyStringList().get(i).getName().equals(name)) {
				return;
			}
		}

		// 不存在时添加
		mainForm.getLeftBottomBean().getKeyStringList().add(new EntityForDownList(name, name));
		mainForm.getLeftBottomBean().setKeyListEmptyFlag("NOTEMPTY");
	}

	private void doAddXian(MainForm mainForm) {
		String id = mainForm.getLeftBottomBean().getXian();
		String name = "";

		// 市ID对应市NAME取得
		for (int i = 0; i < mainForm.getLeftBottomBean().getXianList().size(); i++) {
			if (mainForm.getLeftBottomBean().getXianList().get(i).getId().equals(id)) {
				name = mainForm.getLeftBottomBean().getXianList().get(i).getName();
				break;
			}
		}

		// 判断市NAME是否在搜索LIST中已经存在
		for (int i = 0; i < mainForm.getLeftBottomBean().getKeyStringList().size(); i++) {
			if (mainForm.getLeftBottomBean().getKeyStringList().get(i).getName().equals(name)) {
				return;
			}
		}

		// 不存在时添加
		mainForm.getLeftBottomBean().getKeyStringList().add(new EntityForDownList(name, name));
		mainForm.getLeftBottomBean().setKeyListEmptyFlag("NOTEMPTY");
	}

	private void doAllShi(MainForm mainForm) {
		// 判断市LIST是否在搜索LIST中已经存在
		List<EntityForDownList> shiList = mainForm.getLeftBottomBean().getShiList();
		List<EntityForDownList> keyStringList = mainForm.getLeftBottomBean().getKeyStringList();

		flag: for (int i = 0; i < shiList.size(); i++) {
			for (int j = 0; j < keyStringList.size(); j++) {
				if (shiList.get(i).getName().equals(keyStringList.get(j).getName())) {
					continue flag;
				}
			}
			// 不存在时添加
			keyStringList.add(shiList.get(i));
		}
		mainForm.getLeftBottomBean().setKeyListEmptyFlag("NOTEMPTY");
	}

	private void doAllXian(MainForm mainForm) {
		// 判断市LIST是否在搜索LIST中已经存在
		List<EntityForDownList> xianList = mainForm.getLeftBottomBean().getXianList();
		List<EntityForDownList> keyStringList = mainForm.getLeftBottomBean().getKeyStringList();

		flag: for (int i = 0; i < xianList.size(); i++) {
			for (int j = 0; j < keyStringList.size(); j++) {
				if (xianList.get(i).getName().equals(keyStringList.get(j).getName())) {
					continue flag;
				}
			}
			// 不存在时添加
			keyStringList.add(xianList.get(i));
		}
		mainForm.getLeftBottomBean().setKeyListEmptyFlag("NOTEMPTY");
	}

	private void doAddSearchString(MainForm mainForm) {
		String searchString = mainForm.getLeftBottomBean().getSearchString();
		List<EntityForDownList> keyStringList = mainForm.getLeftBottomBean().getKeyStringList();

		// 判断市NAME是否在搜索LIST中已经存在
		for (int i = 0; i < keyStringList.size(); i++) {
			if (keyStringList.get(i).getName().equals(searchString)) {
				return;
			}
		}

		// 不存在时添加
		keyStringList.add(new EntityForDownList(searchString, searchString));
		mainForm.getLeftBottomBean().setKeyListEmptyFlag("NOTEMPTY");
	}

	private void doDelKeyString(MainForm mainForm) {
		String keyString = mainForm.getLeftBottomBean().getKeyString();
		List<EntityForDownList> keyStringList = mainForm.getLeftBottomBean().getKeyStringList();

		// 判断市NAME是否在搜索LIST中已经存在
		for (int i = 0; i < keyStringList.size(); i++) {
			if (keyStringList.get(i).getName().equals(keyString)) {
				keyStringList.remove(i);
				break;
			}
		}
		if (mainForm.getLeftBottomBean().getKeyStringList().size() == 0) {
			mainForm.getLeftBottomBean().setKeyListEmptyFlag("EMPTY");
		}
	}

}